CC ?= gcc

# source files directories
SRC_TESTS_DIR = .
SRC_COMMON_DIR = common

# flags for debugging
ifeq ($(DEBUG), 1)
CFLAGS += -O0 -g -DDEBUG
else
CFLAGS += -O3
endif

# flags
LIB_PATH=..
LIB_NAME=$(shell basename $(LIB_PATH)/*.so)
CFLAGS += -Wall -Wextra -std=c99
LDFLAGS += -L$(LIB_PATH) -Wl,-rpath=$(LIB_PATH)

# includes and libraries
INCS = -I../src
LIBS = -l:$(LIB_NAME)

# source, object and output
SRC_TESTS = $(wildcard $(SRC_TESTS_DIR)/*.c)
SRC_COMMON = $(wildcard $(SRC_COMMON_DIR)/*.c)
OBJ_TESTS = $(SRC_TESTS:.c=.o)
OBJ_COMMON = $(SRC_COMMON:.c=.o)
OBJ = $(OBJ_TESTS) $(OBJ_COMMON)
OUTPUTS = $(SRC_TESTS:.c=.bin)

all: $(OBJ) $(OUTPUTS)

%.bin: $(OBJ_TESTS)
	$(CC) $(@:.bin=.o) $(OBJ_COMMON) $(LDFLAGS) -o $@ $(LIBS)

%.o: %.c
	$(CC) $(CFLAGS) $(INCS) -o $@ -c $<

clean:
	rm -f $(OBJ) *.bin

run-tests:
	@for f in *.bin; do valgrind --leak-check=full --show-leak-kinds=all ./$$f; echo; done
